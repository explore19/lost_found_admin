{"remainingRequest":"F:\\lost_found_admin\\node_modules\\babel-loader\\lib\\index.js!F:\\lost_found_admin\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\lost_found_admin\\src\\utils\\request.js","dependencies":[{"path":"F:\\lost_found_admin\\src\\utils\\request.js","mtime":1591088323018},{"path":"F:\\lost_found_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589786699959},{"path":"F:\\lost_found_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1589786699004},{"path":"F:\\lost_found_admin\\node_modules\\eslint-loader\\index.js","mtime":1589786704501}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"F:\\\\lost_found_admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar service = _axios.default.create({\n  // baseURL: 'http://autohomework.top', // url = base url + request url\n  baseURL: 'http://localhost:8000',\n  // url = base url + request url\n  // baseURL: 'https://xyzliu.cn:8000', // url = base url + request url\n  timeout: 1000 * 10,\n  // request timeout\n  withCredentials: true\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  // do something before request is sent\n  if (_store.default.getters.token) {\n    // let each request carry token\n    // ['X-Token'] is a custom headers key\n    // please modify it according to the actual situation\n    config.headers['X-Token'] = (0, _auth.getToken)();\n  }\n\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\r\n * If you want to get http information such as headers or status\r\n * Please return  response => response\r\n*/\n\n/**\r\n * Determine the request status by custom code\r\n * Here is just an example\r\n * You can also judge the status by HTTP Status Code\r\n */\nfunction (response) {\n  console.log(response);\n  var res = response.data; // if the custom code is not 20000, it is judged as an error.\n\n  if (res.status !== 0) {\n    (0, _elementUi.Message)({\n      message: res.msg || 'Error',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return res;\n  } else {\n    return res;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  (0, _elementUi.Message)({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",null]}