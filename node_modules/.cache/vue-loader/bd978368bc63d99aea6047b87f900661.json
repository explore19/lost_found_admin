{"remainingRequest":"F:\\lost_found_admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\lost_found_admin\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\lost_found_admin\\src\\layout\\components\\Navbar.vue","mtime":1591629252571},{"path":"F:\\lost_found_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589786699959},{"path":"F:\\lost_found_admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1589786699004},{"path":"F:\\lost_found_admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589786699959},{"path":"F:\\lost_found_admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1589786720234}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { queryPost } from '@/api/post'\r\nimport Breadcrumb from '@/components/Breadcrumb'\r\nimport Hamburger from '@/components/Hamburger'\r\nimport Utils from '@/utils/util'\r\nexport default {\r\n  components: {\r\n    Breadcrumb,\r\n    Hamburger\r\n  },\r\n  data() {\r\n    return {\r\n      num: '',\r\n      showBadge: true,\r\n      queryOptions: {\r\n        keyWords: '',\r\n        page: 1,\r\n        pageSize: 10,\r\n        status: 1\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'sidebar',\r\n      'avatar',\r\n      'coin',\r\n      'name'\r\n    ])\r\n  },\r\n  created() {\r\n    this.requestData()\r\n  },\r\n  mounted() {\r\n    var that = this\r\n    Utils.$on('demo', function() {\r\n      that.requestData()\r\n    })\r\n  },\r\n  methods: {\r\n    requestData() {\r\n      queryPost(this.queryOptions).then((res) => {\r\n        if (res.status === 0) {\r\n          this.num = res.data.total\r\n          if (this.num === 0) {\r\n            this.showBadge = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    toggleSideBar() {\r\n      this.$store.dispatch('app/toggleSideBar')\r\n    },\r\n    async logout() {\r\n      await this.$store.dispatch('user/logout')\r\n      this.$router.push(`/login?redirect=${this.$route.fullPath}`)\r\n    }\r\n  }\r\n}\r\n",null]}