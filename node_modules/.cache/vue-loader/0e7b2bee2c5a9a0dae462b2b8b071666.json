{"remainingRequest":"C:\\work\\treasure-bag\\treasure-bag\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\treasure-bag\\treasure-bag\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\treasure-bag\\treasure-bag\\src\\views\\login\\index.vue","mtime":1581668164659},{"path":"C:\\work\\treasure-bag\\treasure-bag\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\treasure-bag\\treasure-bag\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\treasure-bag\\treasure-bag\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\treasure-bag\\treasure-bag\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { validUsername } from '@/utils/validate'\nimport { getCode } from '@/api/uschool'\n\nexport default {\n  name: 'Login',\n  data() {\n    const validateUsername = (rule, value, callback) => {\n      if (!validUsername(value)) {\n        callback(new Error('Please enter the correct user name'))\n      } else {\n        callback()\n      }\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loginForm: {\n        username: '13347634837',\n        password: 'q123456',\n        code: '',\n        cg: '',\n        invite_code: ''\n      },\n      loginRules: {\n        username: [{ required: true, trigger: 'blur' }],\n        password: [{ required: true, trigger: 'blur' }]\n      },\n      loading: false,\n      passwordType: 'password',\n      img: '',\n      need_code: false,\n      redirect: undefined\n\n    }\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.loginForm.invite_code = this.getQueryVariable('invite_code')\n  },\n  methods: {\n    getQueryVariable(variable) {\n      const url = document.location.toString()\n      const query = url.split('?')[1]\n      const vars = query.split('&')\n      for (let i = 0; i < vars.length; i++) {\n        const pair = vars[i].split('=')\n        if (pair[0] === variable) {\n          return pair[1]\n        }\n      }\n      return ''\n    },\n    showPwd() {\n      if (this.passwordType === 'password') {\n        this.passwordType = ''\n      } else {\n        this.passwordType = 'password'\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus()\n      })\n    },\n    handleClickCode() {\n      getCode().then((res) => {\n        if (res.status === 0) {\n          this.loginForm.cg = res.data.cg\n          this.img = res.data.img\n        }\n      })\n    },\n    async handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          this.$store.dispatch('user/login', this.loginForm).then((res) => {\n            if (res.status === 3) {\n              getCode().then((res) => {\n                if (res.status === 0) {\n                  this.loginForm.cg = res.data.cg\n                  this.img = res.data.img\n                  this.need_code = true\n                }\n              })\n            }\n            if (res.status === 1 && this.need_code) {\n              this.handleClickCode()\n            }\n            this.$router.push({ path: this.redirect || '/' })\n            this.loading = false\n          }).catch(() => {\n            this.loading = false\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}